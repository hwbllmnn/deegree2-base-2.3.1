//$HeadURL$
/*----------------    FILE HEADER  ------------------------------------------

 This file is part of deegree.
 Copyright (C) 2001-2008 by:
 EXSE, Department of Geography, University of Bonn
 http://www.giub.uni-bonn.de/deegree/
 lat/lon GmbH
 http://www.lat-lon.de

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

 Contact:

 Andreas Poth
 lat/lon GmbH
 Aennchenstr. 19
 53115 Bonn
 Germany
 E-Mail: poth@lat-lon.de

 Prof. Dr. Klaus Greve
 Department of Geography
 University of Bonn
 Meckenheimer Allee 166
 53115 Bonn
 Germany
 E-Mail: greve@giub.uni-bonn.de

 
 ---------------------------------------------------------------------------*/
package org.deegree.ogcwebservices.wass.common;

import org.deegree.i18n.Messages;
import org.deegree.security.session.MemoryBasedSessionManager;
import org.deegree.security.session.SessionStatusException;

/**
 * This class handles CloseSession requests as specified by the GDI NRW Access Control spec V1.0.
 * Note that according to the spec, the response should be empty.
 * 
 * @author <a href="mailto:schmitz@lat-lon.de">Andreas Schmitz</a>
 * @author last edited by: $Author$
 * 
 * @version $Revision$, $Date$
 */

public class CloseSessionHandler {

    private MemoryBasedSessionManager sessionManager = null;

    /**
     * Creates new instance that can handle CloseSession requests.
     */
    public CloseSessionHandler() {
        sessionManager = MemoryBasedSessionManager.getInstance();
    }

    /**
     * Closes the session encapsulated in the request.
     * 
     * @param request
     *            the request
     * @throws SessionStatusException
     */
    public void handleRequest( CloseSession request )
                            throws SessionStatusException {
        String session = request.getSessionID();
        if ( sessionManager.getSessionByID( session ) == null )
            throw new SessionStatusException( Messages.getMessage( "WASS_ERROR_INVALID_SESSION", request.getServiceName() ) );
        sessionManager.removeSessionByID( session );
    }

}
